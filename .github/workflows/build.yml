name: Build Kernel

on: [push, pull_request]

jobs:
  build:
    name: Build Kernel
    runs-on: ubuntu-20.04 
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    
    - name: Set Up Toolchain
      run: |
        # add the Ubuntu 18.04 repository to the end of the sources.list file
        sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu bionic main restricted universe multiverse" >> /etc/apt/sources.list'
        sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu bionic-updates main restricted universe multiverse" >> /etc/apt/sources.list'
        sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu bionic-backports main restricted universe multiverse" >> /etc/apt/sources.list'

        # update the repository information
        sudo apt update
        sudo apt-get install -y gcc-5-aarch64-linux-gnu
        sudo update-alternatives --install /usr/bin/aarch64-linux-gnu-gcc aarch64-linux-gnu-gcc /usr/bin/aarch64-linux-gnu-gcc-5 100
      
    
    - name: Install Dependencies
      run: sudo apt-get install -y bc libssl-dev
    
    - name: Build Kernel
      run: |
        $(cd ./drivers/misc/mediatek/cmdq/v2 && wget https://github.com/ibilux/android_device_tree_hermes/raw/crdroid-9.0/kernel-headers/cmdq_engine.h)
        $(cp ./drivers/misc/mediatek/ext_disp/mt8167/extd_platform.h ./drivers/misc/mediatek/ext_disp/ )
        export CFLAGS="-w"
        export CXXFLAGS="-w"
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- a04br3_debug_defconfig
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- -j$(nproc)
        make ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- Image dtbs
    
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: kernel
        path: |
          arch/arm64/boot/Image
          arch/arm64/boot/dts/mediatek/mt8167-a04-br3.dtb
